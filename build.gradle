buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3.1"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'

group = 'me.gavin'
version = '1.0'
archivesBaseName = 'gavhack'

configurations {
    shade
    compile.extendsFrom shade
}

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = 'jitpack.io'
        url = 'https://jitpack.io/'
    }
}

dependencies {
    shade('org.spongepowered:mixin:0.7.4-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    shade 'com.github.Gavhack-development:Quasar:1.0'
    shade 'net.jodah:typetools:0.4.4'
    shade 'club.minnced:java-discord-rpc:2.0.1'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'gavhack.refmap.json'
}

jar {
    manifest {
        attributes(
                'MixinConfigs': mixinConfigs,
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': mixinCoreMod,
                'ForceLoadAsMod': 'true',
        )
    }
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}
